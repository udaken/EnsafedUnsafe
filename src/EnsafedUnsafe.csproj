<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>8.0</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageProjectUrl>https://github.com/udaken/EnsafedUnsafe</PackageProjectUrl>
    <Description>EnsafedUnsafe provides System.Runtime.CompilerServices.Unsafe with a "little" more safety Wrapper Method. And also provides several support methods.

• It is implemented in the UnsafeUnmanaged class. In most cases, you just replace Unsafe to UnsafeUnmanaged.
  All type argument is restricted to unmanaged
• overload for ref readonly, with an ReadOnly in the suffix.
• Utility methods like OffsetOf, Overlaps, NullRef, IsNullRef.
• .NET Standard 2.0 is supported.</Description>
    <Authors>udaken</Authors>
    <Company>udaken</Company>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="4.7.1" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

</Project>
